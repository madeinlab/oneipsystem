diff -urN a/core/emperor.c b/core/emperor.c
--- a/core/emperor.c	2021-10-06 14:22:45.000000000 +0900
+++ b/core/emperor.c	2025-06-01 22:57:36.459591940 +0900
@@ -730,7 +730,7 @@
 	c_ui->status = 2;
 	c_ui->cursed_at = uwsgi_now();
 
-	uwsgi_log_verbose("[emperor] bringing back instance %s to on-demand mode\n", c_ui->name);
+	//uwsgi_log_verbose("[emperor] bringing back instance %s to on-demand mode\n", c_ui->name);
 }
 
 void emperor_stop(struct uwsgi_instance *c_ui) {
@@ -760,7 +760,7 @@
 		c_ui->status = 1;
 	c_ui->cursed_at = uwsgi_now();
 
-	uwsgi_log_verbose("[emperor] curse the uwsgi instance %s (pid: %d)\n", c_ui->name, (int) c_ui->pid);
+	//uwsgi_log_verbose("[emperor] curse the uwsgi instance %s (pid: %d)\n", c_ui->name, (int) c_ui->pid);
 
 }
 
@@ -1818,7 +1818,7 @@
 					if (byte == 17) {
 						ui_current->loyal = 1;
 						ui_current->last_loyal = uwsgi_now();
-						uwsgi_log_verbose("[emperor] vassal %s is now loyal\n", ui_current->name);
+						//uwsgi_log_verbose("[emperor] vassal %s is now loyal\n", ui_current->name);
 						// remove it from the blacklist
 						uwsgi_emperor_blacklist_remove(ui_current->name);
 						// TODO post-start hook
@@ -1846,12 +1846,12 @@
 					else if (byte == 5) {
 						ui_current->accepting = 1;
 						ui_current->last_accepting = uwsgi_now();
-						uwsgi_log_verbose("[emperor] vassal %s is ready to accept requests\n", ui_current->name);
+						//uwsgi_log_verbose("[emperor] vassal %s is ready to accept requests\n", ui_current->name);
 					}
 					else if (byte == 1) {
 						ui_current->ready = 1;
 						ui_current->last_ready = uwsgi_now();
-						uwsgi_log_verbose("[emperor] vassal %s has been spawned\n", ui_current->name);
+						//uwsgi_log_verbose("[emperor] vassal %s has been spawned\n", ui_current->name);
 					}
 					else if (byte == 2) {
 						emperor_push_config(ui_current);
@@ -1990,7 +1990,7 @@
 					ui_current->cursed_at = 0;
 					ui_current->ready = 0;
 					ui_current->accepting = 0;
-					uwsgi_log("[uwsgi-emperor] %s -> back to \"on demand\" mode, waiting for connections on socket \"%s\" ...\n", ui_current->name, ui_current->socket_name);
+					//uwsgi_log("[uwsgi-emperor] %s -> back to \"on demand\" mode, waiting for connections on socket \"%s\" ...\n", ui_current->name, ui_current->socket_name);
 					break;
 				}
 			}
@@ -2323,7 +2323,7 @@
 		uwsgi.has_emperor = 1;
 		uwsgi.emperor_fd = atoi(emperor_env);
 		uwsgi.master_process = 1;
-		uwsgi_log("*** has_emperor mode detected (fd: %d) ***\n", uwsgi.emperor_fd);
+		//uwsgi_log("*** has_emperor mode detected (fd: %d) ***\n", uwsgi.emperor_fd);
 
 		if (getenv("UWSGI_EMPEROR_FD_CONFIG")) {
 			uwsgi.emperor_fd_config = atoi(getenv("UWSGI_EMPEROR_FD_CONFIG"));
@@ -2405,7 +2405,7 @@
         uwsgi_socket_b(uwsgi.emperor_fd);
 #endif
 	if (rlen > 0) {
-		uwsgi_log_verbose("received message %d from emperor\n", byte);
+		//uwsgi_log_verbose("received message %d from emperor\n", byte);
 		// remove me
 		if (byte == 0) {
 			uwsgi_hooks_run(uwsgi.hook_emperor_stop, "emperor-stop", 0);
diff -urN a/core/ini.c b/core/ini.c
--- a/core/ini.c	2021-10-06 14:22:45.000000000 +0900
+++ b/core/ini.c	2025-06-01 23:25:22.231417531 +0900
@@ -113,9 +113,9 @@
 		}
 	}
 
-	if (file[0] != 0 && file != last_file) {
-		uwsgi_log_initial("[uWSGI] getting INI configuration from %s\n", file);
-	}
+	//if (file[0] != 0 && file != last_file) {
+		//uwsgi_log_initial("[uWSGI] getting INI configuration from %s\n", file);
+	//}
 
 	ini = uwsgi_open_and_read(file, &len, 1, magic_table);
 	if (file != last_file) {
diff -urN a/core/uwsgi.c b/core/uwsgi.c
--- a/core/uwsgi.c	2025-06-01 20:57:09.418951340 +0900
+++ b/core/uwsgi.c	2025-06-01 23:27:10.451291055 +0900
@@ -1315,7 +1315,7 @@
 	// unsubscribe if needed
 	uwsgi_unsubscribe_all();
 
-	uwsgi_log("SIGINT/SIGTERM received...killing workers...\n");
+	//uwsgi_log("SIGINT/SIGTERM received...killing workers...\n");
 
 	int i;
 	for (i = 1; i <= uwsgi.numproc; i++) {
@@ -3199,9 +3199,9 @@
 		if (uwsgi.is_a_reload) {
 			uwsgi_log("gracefully (RE)spawned uWSGI master process (pid: %d)\n", uwsgi.mypid);
 		}
-		else {
-			uwsgi_log("spawned uWSGI master process (pid: %d)\n", uwsgi.mypid);
-		}
+		//else {
+			//uwsgi_log("spawned uWSGI master process (pid: %d)\n", uwsgi.mypid);
+		//}
 	}
 
 
