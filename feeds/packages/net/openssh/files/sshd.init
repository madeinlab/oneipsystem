#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2011 OpenWrt.org

START=50
STOP=50

USE_PROCD=1
PROG=/usr/sbin/sshd
CONFIGFILE=/etc/ssh/sshd_config

# SSH 키 생성 함수
generate_keys() {
	for type in rsa ed25519
	do
		# check for keys
		key=/etc/ssh/ssh_host_${type}_key
		[ ! -f $key ] && {
			# generate missing keys
			[ -x /usr/bin/ssh-keygen ] && {
				/usr/bin/ssh-keygen -N '' -t $type -f $key 2>&- >&-
			}
		}
	done
	mkdir -m 0700 -p /var/empty
}

generate_sshd_config() {
	local enabled
	local port
	config_get enabled sshd enabled "0"
	config_get port sshd Port "2222"

	# sshd_config 파일 생성
	cat > $CONFIGFILE <<EOF
# Generated by UCI configuration
Port ${port}
EOF

	# UCI 옵션들을 sshd_config로 변환
	local options="PermitRootLogin PasswordAuthentication AddressFamily ListenAddress Protocol \
				  PubkeyAuthentication AuthorizedKeysFile PermitEmptyPasswords \
				  ChallengeResponseAuthentication UsePAM X11Forwarding PrintMotd PrintLastLog \
				  TCPKeepAlive Compression AllowTcpForwarding GatewayPorts UseDNS MaxStartups \
				  MaxAuthTries LoginGraceTime ClientAliveInterval ClientAliveCountMax"

	for opt in $options; do
		local value
		config_get value sshd "$opt"
		[ -n "$value" ] && echo "$opt $value" >> $CONFIGFILE
	done
}

append_listen_address() {
	echo "ListenAddress $1" >> $CONFIGFILE
}

start_service() {
	# UCI 설정 로드
	config_load openssh

	# enabled 확인
	local enabled
	config_get enabled sshd enabled "0"
	[ "$enabled" = "0" ] && return

	# SSH 키 생성
	generate_keys
	
	# sshd_config 생성
	generate_sshd_config

	# procd 서비스 시작
	procd_open_instance
	procd_set_param command $PROG -D -f $CONFIGFILE
	procd_set_param respawn
	procd_close_instance
}

service_triggers() {
	procd_add_reload_trigger "openssh"
}

reload_service() {
	stop
	start
}

shutdown() {
	local pid
	stop
	# kill active clients
	for pid in $(pidof sshd)
	do
		[ "$pid" = "$$" ] && continue
		[ -e "/proc/$pid/stat" ] && kill $pid
	done
}
