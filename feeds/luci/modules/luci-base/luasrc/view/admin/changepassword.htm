<!DOCTYPE html>
<html lang="<%=luci.i18n.context.lang%>">
<head>
    <meta charset="utf-8">
    <title>Change Password - OneIPSystem</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" type="text/css" media="screen" href="<%=media%>/cascade.css">
    <style>
        body { 
            background: #fff;
            margin: 0;
            padding: 20px;
        }
        .change-password-container {
            max-width: 600px;
            margin: 40px auto;
            padding: 20px;
        }
        .form-field {
            margin-bottom: 15px;
        }
        .form-field label {
            display: block;
            margin-bottom: 5px;
        }
        .form-field input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .button-container {
            text-align: right;
            margin-top: 20px;
        }
        .btn {
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            margin-left: 10px;
        }
        .btn-primary {
            background: #00A3E1;
            color: white;
            border: none;
        }
        .btn-secondary {
            background: #f0f0f0;
            border: 1px solid #ddd;
        }
        .error-message {
            color: #cc0000;
            margin-bottom: 15px;
        }
        .requirements {
            margin: 10px 0;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            display: none;
            background: #f9f9f9;
            font-size: 13px;
        }
        .requirement {
            margin: 5px 0;
            line-height: 1.4;
        }
        .requirement.valid { color: green; }
        .requirement.invalid { color: red; }
        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(0,0,0,.3);
            border-radius: 50%;
            border-top-color: #000;
            animation: spin 1s ease-in-out infinite;
            -webkit-animation: spin 1s ease-in-out infinite;
            vertical-align: middle;
            margin-left: 8px;
        }

        @keyframes spin {
            to { -webkit-transform: rotate(360deg); }
        }
        @-webkit-keyframes spin {
            to { -webkit-transform: rotate(360deg); }
        }
    </style>
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function() {
            var currentPasswordInput = document.querySelector('input[name="current_password"]');
            if (currentPasswordInput) {
                currentPasswordInput.focus();

                // 마우스 이벤트 생성
                try {
                    var rect = currentPasswordInput.getBoundingClientRect();
                    if (rect) {
                        var evt = document.createEvent('MouseEvents');
                        evt.initMouseEvent(
                            'mouseover',
                            true,
                            true,
                            window,
                            0,
                            0, 0,    // screenX, screenY
                            rect.left + rect.width/2, rect.top + rect.height/2, // clientX, clientY
                            false, false, false, false,
                            0,
                            null
                        );
                        currentPasswordInput.dispatchEvent(evt);
                    }
                } catch(e) {
                    console.log('Mouse event creation failed:', e);
                }
            }
        });
    </script>
</head>
<body>
    <div class="change-password-container">
        <h2>Change Password</h2>
        
        <% if success then %>
            <div class="alert-message success">
                <h4>Password changed successfully!</h4>
                <p>Redirecting to login page... <i class="loading"></i></p>
            </div>
            <script>
                setTimeout(function() {
                    // Logout process
                    fetch('<%=url("admin/logout")%>', {
                        method: 'POST',
                        credentials: 'include'
                    })
                    .finally(function() {
                        // Redirect to login page
                        window.location.href = '<%=url("admin/login")%>';
                    });
                }, 3000);
            </script>
        <% else %>
            <% if error then %>
            <div class="error-message"><%=message%></div>
            <% end %>

            <form method="post" action="<%=url('admin/changepassword')%>" onsubmit="return validateForm()" autocomplete="off">
                <div class="form-field">
                    <label>Current Password</label>
                    <input type="password" name="current_password" id="current_password" required autocomplete="off">
                </div>

                <div class="form-field">
                    <label>New Password</label>
                    <input type="password" name="new_password" id="new_password"
                           oninput="checkPassword(this.value)" required autocomplete="off">
                    <div id="requirements" class="requirements">
                        <div class="requirement" id="length">
                            <span>✗</span> Length between 9 and 32 characters
                        </div>
                        <div class="requirement" id="uppercase">
                            <span>✗</span> Include uppercase letters
                        </div>
                        <div class="requirement" id="lowercase">
                            <span>✗</span> Include lowercase letters
                        </div>
                        <div class="requirement" id="number">
                            <span>✗</span> Include numbers
                        </div>
                        <div class="requirement" id="special">
                            <span>✗</span> Include special characters (@#$%^&*)
                        </div>
                    </div>
                </div>

                <div class="form-field">
                    <label>Confirm Password</label>
                    <input type="password" name="confirm_password" id="confirm_password" required autocomplete="off">
                </div>

                <div class="button-container">
                    <input type="reset" class="btn btn-secondary" value="Reset" onclick="resetForm()">
                    <input type="submit" class="btn btn-primary" value="Save">
                </div>
            </form>
        <% end %>
    </div>

    <script>
        // UCI에서 패스워드 규칙을 로드하는 함수
        async function getPasswordRules() {
            try {
                const response = await fetch('/cgi-bin/luci/admin/system/password_rules');
                const rules = await response.json();
                return rules;
            } catch (error) {
                console.error('Failed to load password rules:', error);
                return { minLength: 9, maxLength: 32 }; // 128 -> 32로 변경
            }
        }

        // 페이지 로드 시 규칙 로드
        let passwordRules = { minLength: 9, maxLength: 32 }; // 128 -> 32로 변경
        document.addEventListener('DOMContentLoaded', async function() {
            passwordRules = await getPasswordRules();
            updateRequirementsText();
        });

        function updateRequirementsText() {
            const lengthReq = document.getElementById('length');
            if (lengthReq) {
                lengthReq.innerHTML = `<span>✗</span> Length between ${passwordRules.minLength} and ${passwordRules.maxLength} characters`;
            }
        }

        function checkPassword(value) {
            const requirements = document.getElementById('requirements');
            requirements.style.display = 'block';

            const checks = {
                length: new RegExp(`^.{${passwordRules.minLength},${passwordRules.maxLength}}$`),
                uppercase: /[A-Z]/,
                lowercase: /[a-z]/,
                number: /[0-9]/,
                special: /[@#$%^&*]/
            };

            let allValid = true;
            for (const [key, regex] of Object.entries(checks)) {
                const element = document.getElementById(key);
                const isValid = regex.test(value);
                element.classList.toggle('valid', isValid);
                element.classList.toggle('invalid', !isValid);
                element.querySelector('span').textContent = isValid ? '✓' : '✗';
                allValid = allValid && isValid;
            }
            
            return allValid;
        }

        function validateForm() {
            const newPassword = document.getElementById('new_password').value;
            const confirmPassword = document.getElementById('confirm_password').value;

            if (!checkPassword(newPassword)) {
                alert('Password does not meet all requirements');
                return false;
            }

            if (newPassword !== confirmPassword) {
                alert('Passwords do not match');
                return false;
            }

            return true;
        }

        function resetForm() {
            document.getElementById('requirements').style.display = 'none';
            const requirements = document.querySelectorAll('.requirement');
            requirements.forEach(req => {
                req.classList.remove('valid', 'invalid');
                req.querySelector('span').textContent = '✗';
            });
        }

        // Show requirements on focus
        document.getElementById('new_password').addEventListener('focus', function() {
            document.getElementById('requirements').style.display = 'block';
        });

        function handlePasswordChange() {
            // ... 기존 패스워드 변경 로직 ...

            fetch('/cgi-bin/luci/admin/system/password', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // 1. Show success message
                    document.getElementById('result').innerHTML = `
                        <div class="alert-message success">
                            <h4>Password changed successfully!</h4>
                            <p>Redirecting to login page... <i class="loading"></i></p>
                        </div>`;

                    // 2. Wait for 1 second before session termination and redirect
                    setTimeout(() => {
                        // 3. Terminate all sessions
                        fetch('/cgi-bin/luci/admin/logout', {
                            method: 'POST'
                        })
                        .finally(() => {
                            // 4. Redirect to login page
                            window.location.href = '/cgi-bin/luci/admin/login';
                        });
                    }, 1000);
                } else {
                    document.getElementById('result').innerHTML = `
                        <div class="alert-message error">
                            <h4>Password Change Failed</h4>
                            <p>${data.message || 'An error occurred while changing the password.'}</p>
                        </div>`;
                }
            });
        }
    </script>
</body>
</html>
