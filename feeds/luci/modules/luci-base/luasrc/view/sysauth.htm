<%#
 Copyright 2008 Steven Barth <steven@midlink.org>
 Copyright 2008-2012 Jo-Philipp Wich <jow@openwrt.org>
 Licensed to the public under the Apache License 2.0.
-%>

<%+header%>

<form method="post" action="<%=pcdata(FULL_REQUEST_URI)%>" autocomplete="off">
	<%- if fuser then %>
		<%
			if message then
				nixio.syslog("info", string.format("message: %s", message))
			end
		%>
		<div class="alert-message warning">
			<p><%:Invalid username and/or password! Please try again.%></p>
			<!-- <%- if fail_count and fail_count > 0 then %>
				<p class="failed-attempts">
					<%:Failed login attempts%>: <strong><%= fail_count %></strong>
					<%- if fail_count >= retry_count then %>
						<br/>
						<span class="lockout-warning"><%:Account is temporarily locked%></span>
					<%- end %>
				</p>
			<%- end %>
			<%- if message then %>
				<p class="error-message"><%= message %></p>
			<%- end %> -->
		</div>
	<% end -%>

	<%- if debug_msg then %>
		<div class="debug-message">
			<%= debug_msg %>
		</div>
	<% end -%>

	<div class="cbi-map">
		<h2 name="content"><%:Authorization Required%></h2>
		<div class="cbi-map-descr">
			<%:Please enter your username and password.%>
		</div>
		<div class="cbi-section"><div class="cbi-section-node">
			<div class="cbi-value">
				<label class="cbi-value-title" for="luci_username"><%:Username%></label>
				<div class="cbi-value-field">
					<input class="cbi-input-text" type="text" name="luci_username" id="luci_username" autocomplete="off" autocomplete="new-password"/>
				</div>
			</div>
			<div class="cbi-value cbi-value-last">
				<label class="cbi-value-title" for="luci_password"><%:Password%></label>
				<div class="cbi-value-field">
					<input class="cbi-input-text" type="password" name="luci_password" id="luci_password" autocomplete="off" autocomplete="new-password"/>
				</div>
			</div>
		</div></div>
	</div>

	<div class="cbi-page-actions">
		<input type="submit" value="<%:Login%>" class="btn cbi-button cbi-button-apply" />
		<input type="reset" value="<%:Reset%>" class="btn cbi-button cbi-button-reset" />
	</div>
</form>

<script src="<%=resource%>/jsencrypt.min.js"></script>
<script>
document.addEventListener("DOMContentLoaded", function () {
	if (sessionStorage.getItem("username")) sessionStorage.removeItem("username");
	if (sessionStorage.getItem("password")) sessionStorage.removeItem("password");

	var username = document.getElementById('luci_username');
	var password = document.getElementById('luci_password');
	if (username) { username.value = ""; username.focus(); }
	if (password) password.value = "";

	var form = document.querySelector("form");
	if (!form) return;

	form.addEventListener("submit", function(event) {
		if (!validateForm()) {
			event.preventDefault();
			return false;
		}

		var pubkey = `<%=rsa_pubkey%>`;
		var encrypt = new JSEncrypt();
		encrypt.setPublicKey(pubkey);

		var password = document.getElementById('luci_password');
		var encrypted = encrypt.encrypt(password.value);

		if (!encrypted) {
			event.preventDefault();
			return false;
		}
		password.value = encrypted;
	});
});

function validateForm() {
	var username = document.getElementById('luci_username');
	var password = document.getElementById('luci_password');
	removeErrorMessage();
	var valid = true;
	var errorMessage = "";
	if (username.value.trim() === "") {
		errorMessage = "<%:Please enter your username.%>";
		username.focus();
		valid = false;
	} else if (password.value.trim() === "") {
		errorMessage = "<%:Please enter your password.%>";
		password.focus();
		valid = false;
	}
	if (!valid) showError(password, errorMessage);
	return valid;
}
function showError(referenceElement, message) {
	var error = document.createElement("p");
	error.className = "error-text";
	error.style.color = "red";
	error.style.fontSize = "15px";
	error.style.marginTop = "10px";
	error.innerText = message;
	var parent = referenceElement.parentNode;
	parent.appendChild(error);
}
function removeErrorMessage() {
	var errorElement = document.querySelector('.error-text');
	if (errorElement) errorElement.remove();
}
</script>

<%
local uci  = require "luci.model.uci".cursor()
local fs  = require "nixio.fs"
local https_key = uci:get("uhttpd", "main", "key")
local https_port = uci:get("uhttpd", "main", "listen_https")
if type(https_port) == "table" then
	https_port = https_port[1]
end

if https_port and fs.access(https_key) then
	https_port = https_port:match("(%d+)$")
end

local pubkey = fs.readfile("/etc/ssl/public.pem")
%>

<script type="text/javascript">//<![CDATA[
	if (document.location.protocol != 'https:') {
		var url = 'https://' + window.location.hostname + ':' + '<%=https_port%>' + window.location.pathname;
		var img=new Image;
		img.onload=function(){window.location = url};
		img.src='https://' + window.location.hostname + ':' + '<%=https_port%>' + '<%=resource%>/icons/loading.gif?' + Math.random();
		setTimeout(function(){
			img.src=''
		}, 5000);
	}
//]]></script>

<%+footer%>
